[{"/home/gordon/projects/ohbiohealth/site/pages/404.js":"1","/home/gordon/projects/ohbiohealth/site/pages/_app.js":"2","/home/gordon/projects/ohbiohealth/site/pages/account/orders.js":"3","/home/gordon/projects/ohbiohealth/site/pages/account/profile.js":"4","/home/gordon/projects/ohbiohealth/site/pages/account/regdevice.js":"5","/home/gordon/projects/ohbiohealth/site/pages/account/signin.js":"6","/home/gordon/projects/ohbiohealth/site/pages/account/signout.js":"7","/home/gordon/projects/ohbiohealth/site/pages/account/signup.js":"8","/home/gordon/projects/ohbiohealth/site/pages/admin/approve.js":"9","/home/gordon/projects/ohbiohealth/site/pages/admin/devicereg.js":"10","/home/gordon/projects/ohbiohealth/site/pages/index.js":"11","/home/gordon/projects/ohbiohealth/site/pages/privacy.js":"12","/home/gordon/projects/ohbiohealth/site/pages/shop.js":"13","/home/gordon/projects/ohbiohealth/site/pages/terms.js":"14","/home/gordon/projects/ohbiohealth/site/components/Background.js":"15","/home/gordon/projects/ohbiohealth/site/components/CenteredFooter.js":"16","/home/gordon/projects/ohbiohealth/site/components/ChatBotBodyDiagram/ChatBotBodyDiagram.js":"17","/home/gordon/projects/ohbiohealth/site/components/ChatBotInfoBox/ChatBotInfoBox.js":"18","/home/gordon/projects/ohbiohealth/site/components/ChatBotOptions/YesNoOptions.js":"19","/home/gordon/projects/ohbiohealth/site/components/Dropdown.js":"20","/home/gordon/projects/ohbiohealth/site/components/DropdownResponsive.js":"21","/home/gordon/projects/ohbiohealth/site/components/Footer.js":"22","/home/gordon/projects/ohbiohealth/site/components/FooterCopyright.js":"23","/home/gordon/projects/ohbiohealth/site/components/FooterIconList.js":"24","/home/gordon/projects/ohbiohealth/site/components/Header.js":"25","/home/gordon/projects/ohbiohealth/site/components/Hero.js":"26","/home/gordon/projects/ohbiohealth/site/components/NewsletterForm.js":"27","/home/gordon/projects/ohbiohealth/site/components/NewsletterSubscribe.js":"28","/home/gordon/projects/ohbiohealth/site/components/ProductBrowser.js":"29","/home/gordon/projects/ohbiohealth/site/components/Section.js":"30","/home/gordon/projects/ohbiohealth/site/components/VerticalFeatureRow.js":"31","/home/gordon/projects/ohbiohealth/site/components/Image.js":"32","/home/gordon/projects/ohbiohealth/site/components/Product.js":"33","/home/gordon/projects/ohbiohealth/site/components/ProductPrice.js":"34","/home/gordon/projects/ohbiohealth/site/components/cart/AddToCartButton.js":"35","/home/gordon/projects/ohbiohealth/site/pages/api/create-order.js":"36","/home/gordon/projects/ohbiohealth/site/pages/api/get-stripe-session.js":"37","/home/gordon/projects/ohbiohealth/site/pages/api/stripe/[...nextstripe].js":"38","/home/gordon/projects/ohbiohealth/site/pages/api/stripe-web-hook.js":"39","/home/gordon/projects/ohbiohealth/site/pages/cart.js":"40","/home/gordon/projects/ohbiohealth/site/pages/checkout.js":"41","/home/gordon/projects/ohbiohealth/site/pages/thank-you.js":"42","/home/gordon/projects/ohbiohealth/site/components/cart/CartItem.js":"43","/home/gordon/projects/ohbiohealth/site/components/cart/CartItemsContainer.js":"44","/home/gordon/projects/ohbiohealth/site/components/checkout/Address.js":"45","/home/gordon/projects/ohbiohealth/site/components/checkout/CheckoutCartItem.js":"46","/home/gordon/projects/ohbiohealth/site/components/checkout/CheckoutForm.js":"47","/home/gordon/projects/ohbiohealth/site/components/checkout/CountrySelection.js":"48","/home/gordon/projects/ohbiohealth/site/components/checkout/Error.js":"49","/home/gordon/projects/ohbiohealth/site/components/checkout/OrderSuccess.js":"50","/home/gordon/projects/ohbiohealth/site/components/checkout/PaymentModes.js":"51","/home/gordon/projects/ohbiohealth/site/components/checkout/StatesSelection.js":"52","/home/gordon/projects/ohbiohealth/site/components/checkout/YourOrder.js":"53","/home/gordon/projects/ohbiohealth/site/components/checkout/form-elements/Abbr.js":"54","/home/gordon/projects/ohbiohealth/site/components/checkout/form-elements/CheckboxField.js":"55","/home/gordon/projects/ohbiohealth/site/components/checkout/form-elements/InputField.js":"56","/home/gordon/projects/ohbiohealth/site/components/icons/ArrowDown.js":"57","/home/gordon/projects/ohbiohealth/site/components/icons/Cross.js":"58","/home/gordon/projects/ohbiohealth/site/components/icons/Facebook.js":"59","/home/gordon/projects/ohbiohealth/site/components/icons/Instagram.js":"60","/home/gordon/projects/ohbiohealth/site/components/icons/Loading.js":"61","/home/gordon/projects/ohbiohealth/site/components/icons/ShoppingCart.js":"62","/home/gordon/projects/ohbiohealth/site/components/icons/Twitter.js":"63","/home/gordon/projects/ohbiohealth/site/components/icons/Youtube.js":"64","/home/gordon/projects/ohbiohealth/site/components/icons/index.js":"65"},{"size":1295,"mtime":1642519366707,"results":"66","hashOfConfig":"67"},{"size":1438,"mtime":1644049648372,"results":"68","hashOfConfig":"67"},{"size":1044,"mtime":1642520210897,"results":"69","hashOfConfig":"67"},{"size":10286,"mtime":1642520391907,"results":"70","hashOfConfig":"67"},{"size":3572,"mtime":1642520061577,"results":"71","hashOfConfig":"67"},{"size":3540,"mtime":1642519837937,"results":"72","hashOfConfig":"67"},{"size":393,"mtime":1642061767207,"results":"73","hashOfConfig":"67"},{"size":4408,"mtime":1642519934467,"results":"74","hashOfConfig":"67"},{"size":1657,"mtime":1642519558447,"results":"75","hashOfConfig":"67"},{"size":3574,"mtime":1642519683717,"results":"76","hashOfConfig":"67"},{"size":10803,"mtime":1642645854151,"results":"77","hashOfConfig":"67"},{"size":737,"mtime":1642521290307,"results":"78","hashOfConfig":"67"},{"size":1576,"mtime":1644044179302,"results":"79","hashOfConfig":"67"},{"size":733,"mtime":1642521303097,"results":"80","hashOfConfig":"67"},{"size":113,"mtime":1642518554986,"results":"81","hashOfConfig":"67"},{"size":665,"mtime":1642518555026,"results":"82","hashOfConfig":"67"},{"size":1236,"mtime":1642517186256,"results":"83","hashOfConfig":"67"},{"size":306,"mtime":1642517219516,"results":"84","hashOfConfig":"67"},{"size":708,"mtime":1642518523186,"results":"85","hashOfConfig":"67"},{"size":1955,"mtime":1642518555066,"results":"86","hashOfConfig":"67"},{"size":1866,"mtime":1642518555126,"results":"87","hashOfConfig":"67"},{"size":3125,"mtime":1642518652356,"results":"88","hashOfConfig":"67"},{"size":382,"mtime":1642518591596,"results":"89","hashOfConfig":"67"},{"size":546,"mtime":1642518591636,"results":"90","hashOfConfig":"67"},{"size":7151,"mtime":1643944460841,"results":"91","hashOfConfig":"67"},{"size":418,"mtime":1642518835926,"results":"92","hashOfConfig":"67"},{"size":2677,"mtime":1642518810906,"results":"93","hashOfConfig":"67"},{"size":564,"mtime":1642061767207,"results":"94","hashOfConfig":"67"},{"size":2814,"mtime":1642518740766,"results":"95","hashOfConfig":"67"},{"size":865,"mtime":1642523742587,"results":"96","hashOfConfig":"67"},{"size":1303,"mtime":1642523826777,"results":"97","hashOfConfig":"67"},{"size":2359,"mtime":1644043448182,"results":"98","hashOfConfig":"67"},{"size":1307,"mtime":1644035511672,"results":"99","hashOfConfig":"67"},{"size":1672,"mtime":1644035046132,"results":"100","hashOfConfig":"67"},{"size":3586,"mtime":1644069632062,"results":"101","hashOfConfig":"67"},{"size":1729,"mtime":1644070093162,"results":"102","hashOfConfig":"67"},{"size":267,"mtime":1644053850672,"results":"103","hashOfConfig":"67"},{"size":120,"mtime":1644053851102,"results":"104","hashOfConfig":"67"},{"size":2686,"mtime":1644070080212,"results":"105","hashOfConfig":"67"},{"size":184,"mtime":1644044364682,"results":"106","hashOfConfig":"67"},{"size":637,"mtime":1644051994392,"results":"107","hashOfConfig":"67"},{"size":3213,"mtime":1644061142882,"results":"108","hashOfConfig":"67"},{"size":2837,"mtime":1644069632062,"results":"109","hashOfConfig":"67"},{"size":6964,"mtime":1644069632062,"results":"110","hashOfConfig":"67"},{"size":6043,"mtime":1644051382522,"results":"111","hashOfConfig":"67"},{"size":457,"mtime":1644051382522,"results":"112","hashOfConfig":"67"},{"size":11657,"mtime":1644069632062,"results":"113","hashOfConfig":"67"},{"size":1801,"mtime":1644052230582,"results":"114","hashOfConfig":"67"},{"size":244,"mtime":1644051382532,"results":"115","hashOfConfig":"67"},{"size":492,"mtime":1644051382532,"results":"116","hashOfConfig":"67"},{"size":3243,"mtime":1644051382532,"results":"117","hashOfConfig":"67"},{"size":2940,"mtime":1644051382532,"results":"118","hashOfConfig":"67"},{"size":1378,"mtime":1644051382532,"results":"119","hashOfConfig":"67"},{"size":355,"mtime":1644051382532,"results":"120","hashOfConfig":"67"},{"size":1202,"mtime":1644051382532,"results":"121","hashOfConfig":"67"},{"size":1749,"mtime":1644051382542,"results":"122","hashOfConfig":"67"},{"size":446,"mtime":1644044805582,"results":"123","hashOfConfig":"67"},{"size":798,"mtime":1644044805802,"results":"124","hashOfConfig":"67"},{"size":868,"mtime":1644044803092,"results":"125","hashOfConfig":"67"},{"size":1073,"mtime":1644044803642,"results":"126","hashOfConfig":"67"},{"size":3284,"mtime":1644044804062,"results":"127","hashOfConfig":"67"},{"size":883,"mtime":1644044804272,"results":"128","hashOfConfig":"67"},{"size":1487,"mtime":1644044804542,"results":"129","hashOfConfig":"67"},{"size":704,"mtime":1644044804882,"results":"130","hashOfConfig":"67"},{"size":350,"mtime":1644044803352,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},"1yljqvw",{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gordon/projects/ohbiohealth/site/pages/404.js",["275","276","277"],"import Link from 'next/link'\nimport { useTranslation } from 'react-i18next';\n\nexport default function NotFoundPage() {\n  const { t, i18n } = useTranslation();\n\n  return (\n      <div className=\"bg-inherit h-screen\">\n        <div className=\"flex items-center justify-center py-12\">\n            <div className=\"bg-white flex items-center justify-center mx-4 md:w-2/3 \">\n                <div className=\"flex flex-col items-center py-16 \">\n                    <img className=\"px-4 hidden md:block\" src=\"https://i.ibb.co/9Vs73RF/undraw-page-not-found-su7k-1-3.png\" alt=\"\" />\n                    <img className=\"md:hidden\" src=\"https://i.ibb.co/RgYQvV7/undraw-page-not-found-su7k-1.png\" alt=\"\" />\n                    <h1 className=\"px-4 pt-8 pb-4 text-center text-5xl font-bold leading-10 text-gray-800\">{t('oops')}</h1>\n                    <p className=\"px-4 pb-10 text-base leading-none text-center text-gray-600\">{t('notfound')}</p>\n                    <Link href='/'>\n                      <button className=\"mx-4 h-10 w-44 border rounded-md text-white text-base bg-indigo-700 hover:bg-indigo-800 focus:outline-none focus:ring-2 focus:ring-opacity-50 focus:ring-indigo-800\">{t('goback')}</button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}","/home/gordon/projects/ohbiohealth/site/pages/_app.js",[],"/home/gordon/projects/ohbiohealth/site/pages/account/orders.js",[],"/home/gordon/projects/ohbiohealth/site/pages/account/profile.js",[],"/home/gordon/projects/ohbiohealth/site/pages/account/regdevice.js",[],"/home/gordon/projects/ohbiohealth/site/pages/account/signin.js",[],"/home/gordon/projects/ohbiohealth/site/pages/account/signout.js",["278"],"import { useEffect } from 'react';\nimport Router from 'next/router';\nimport useRequest from '../../hooks/use-request';\n\nexport default function Signout(){\n  const { doRequest } = useRequest({\n    url: '/api/users/signout',\n    method: 'post',\n    body: {},\n    onSuccess: () => Router.push('/')\n  });\n\n  useEffect(() => {\n    doRequest();\n  }, []);\n\n  return <div>Signing you out...</div>;\n};\n","/home/gordon/projects/ohbiohealth/site/pages/account/signup.js",[],"/home/gordon/projects/ohbiohealth/site/pages/admin/approve.js",[],"/home/gordon/projects/ohbiohealth/site/pages/admin/devicereg.js",[],"/home/gordon/projects/ohbiohealth/site/pages/index.js",["279","280","281","282","283"],"import { useEffect, useState } from 'react'\nimport Hero from '@/components/Hero'\nimport { Section } from '../components/Section'\nimport { VerticalFeatureRow } from '../components/VerticalFeatureRow'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { ToastContainer, toast } from 'react-toastify'\nimport Link from 'next/link'\nimport Image from 'next/image'\nimport Chatbot from 'react-chatbot-kit'\nimport CookieConsent from \"react-cookie-consent\";\nimport { useTranslation } from 'react-i18next'\nimport Popup from 'reactjs-popup'\nimport config from '../chatbot/config'\nimport MessageParser from '../chatbot/MessageParser'\nimport ActionProvider from '../chatbot/ActionProvider'\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport NewsletterSubscribe from '../components/NewsletterSubscribe'\n\nHomePage.getInitialProps = async (ctx) => {\n  const mailChimpUrl = process.env.NEXT_PUBLIC_MAILCHIMP_URL\n  const storeId = process.env.NEXT_PUBLIC_ECWID_STOREID\n  const options = {headers: new Headers({'Content-Type': 'application/json'})}\n  const resEN = await fetch('https://cms.ohbiohealth.club/documents', {\n    method: 'GET', ...options\n  })\n  const resZH = await fetch('https://cms.ohbiohealth.club/documents?_locale=zh-Hant&&', {\n    method: 'GET', ...options\n  })\n  const dataEN = await resEN.json()\n  const dataZH = await resZH.json()\n\n  return { \n      data: {\n          link: mailChimpUrl,\n          storeId: storeId,\n          about: {\n            en: dataEN.filter(item=> item.type==='aboutus')[0].text,\n            zh: dataZH.filter(item=> item.type==='aboutus')[0].text\n          },\n          technology: {\n            en: dataEN.filter(item=> item.type==='technology')[0].text,\n            zh: dataZH.filter(item=> item.type==='technology')[0].text\n          },\n          BM: {\n            en: dataEN.filter(item=> item.type==='BMfunctions')[0].text,\n            zh: dataZH.filter(item=> item.type==='BMfunctions')[0].text\n          },\n          QM: {\n            en: dataEN.filter(item=> item.type==='QMfunctions')[0].text,\n            zh: dataZH.filter(item=> item.type==='QMfunctions')[0].text\n          },\n          BES: {\n            en: dataEN.filter(item=> item.type==='BESfunctions')[0].text,\n            zh: dataZH.filter(item=> item.type==='BESfunctions')[0].text\n          },\n          SEG: {\n            en: dataEN.filter(item=> item.type==='SEGfunctions')[0].text,\n            zh: dataZH.filter(item=> item.type==='SEGfunctions')[0].text\n          },\n          contact: {\n            en: dataEN.filter(item=> item.type==='contact')[0].text,\n            zh: dataZH.filter(item=> item.type==='contact')[0].text\n          },\n          faq: {\n            en: dataEN.filter(item => item.type==='faq')[0].text\n          }\n      }\n  }\n}\n\nexport default function HomePage({ currentUser, data }) {\n  const [showChatBot, setShowChatBot] = useState(true)\n  const [chatbotConfig, setChatBotConfig] = useState(config)\n  const { t, i18n } = useTranslation()\n  const [aboutContent, setAboutContent] = useState(data.about[i18n.language])\n  const [technologyContent, setTechnologyContent] = useState(data.technology[i18n.language])\n  const [BMContent, setBMContent] = useState(data.BM[i18n.language])\n  const [QMContent, setQMContent] = useState(data.QM[i18n.language])\n  const [BESContent, setBESContent] = useState(data.BES[i18n.language])\n  const [SEGContent, setSEGContent] = useState(data.SEG[i18n.language])\n  const [contactContent, setContactContent] = useState(data.contact[i18n.language])\n  const [faqContent, setFAQContent] = useState(data.faq.en)\n\n  useEffect(() => {\n    setAboutContent(data.about[i18n.language])\n    setTechnologyContent(data.technology[i18n.language])\n    setBMContent(data.BM[i18n.language])\n    setQMContent(data.QM[i18n.language])\n    setBESContent(data.BES[i18n.language])\n    setSEGContent(data.SEG[i18n.language])\n    setContactContent(data.contact[i18n.language])\n\n    if (currentUser) {\n      setShowChatBot(true)    \n      if (currentUser.id) {\n        setChatBotConfig({\n          ...config,\n          state : {\n            ...config.state,\n            userId: currentUser.id,\n            language: i18n.language,\n            t: t\n          }\n        })\n      }  \n    } else {\n      setChatBotConfig({\n        ...config,\n        state: {\n          ...config.state,\n          language: i18n.language,\n          t: t\n        }\n      })\n    }\n  },[i18n.language, currentUser])\n\n  return (\n    <div>\n      <Hero />\n      <ToastContainer />\n      <CookieConsent\n        buttonText={t('ok')}\n      >{t('cookie')}\n      </CookieConsent>  \n      <Section\n        id=\"about\"\n        title={t('aboutus')}\n        description={aboutContent}\n        large={true}\n      >\n        <div id=\"technology\">\n          <VerticalFeatureRow\n            title={t('qtechnology')}\n            description={technologyContent}\n            image=\"/images/feature.svg\"\n            imageAlt=\"First feature alt text\"\n            imageOverride={true}\n          />  \n        </div> \n        <div className='flex items-center'>\n          <h1 className='text-gray-800 text-4xl mx-auto mt-20 font-bold'>{t('products')}</h1>\n        </div>\n        <div id=\"productsBM\">  \n          <VerticalFeatureRow\n            title='BM'\n            description={BMContent}\n            image=\"/images/BM.png\"\n            imageAlt=\"BM alt text\"\n            reverse={true}\n          />   \n        </div>\n        <div id=\"productsQM\">  \n          <VerticalFeatureRow\n            title='QM'\n            description={QMContent}\n            image=\"/images/QE.png\"\n            imageAlt=\"QM alt text\"\n          />   \n        </div>\n        <div id=\"productsBES\">  \n          <VerticalFeatureRow\n            title='BES'\n            description={BESContent}\n            image=\"/images/BES.png\"\n            imageAlt=\"BES alt text\"\n            reverse={true}\n          />   \n        </div>\n        <div id=\"productsSEG\">  \n          <VerticalFeatureRow\n            title='SEG'\n            description={SEGContent}\n            image=\"/images/SEG.png\"\n            imageAlt=\"SEG alt text\"\n          />   \n        </div>\n      </Section>\n      <div id=\"chatbot\" className='items-center text-center'>\n        {\n          showChatBot &&\n          <Popup\n            position={'center top'}\n            trigger={open => (\n            <button>\n              <div className=\"bg-gradient-to-r from-cyan-500 via-indigo-300 to-indigo-500 rounded-lg shadow-lg\">\n                <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n                  <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl px-6\">\n                    <span className=\"block text-gray-700\">{t('pain1')}</span>\n                  </h2>\n                  <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n                    <div className=\"inline-flex rounded-md shadow\">\n                      <Link\n                        href=\"/#chatbot\"\n                      ><a className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-bold rounded-md text-white bg-gray-700 hover:bg-indigo-700\">\n                        {t('getstart')}\n                      </a></Link>\n                    <div className=\"ml-3 inline-flex rounded-md shadow\">\n                      <Link\n                        href=\"/#chatbot\"\n                      ><a className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-bold rounded-md text-indigo-600 bg-white hover:bg-indigo-50\">\n                        {t('learn')}\n                      </a></Link>\n                    </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </button>\n            )}\n            closeOnDocumentClick\n          >\n            {\n              currentUser ?\n              <Chatbot\n                config={{\n                  ...chatbotConfig, \n                  initialMessages: [\n                    createChatBotMessage(t('surveyintro')),\n                    createChatBotMessage(t('q1'), {\n                        withAvatar: false,\n                        delay: 500,\n                        widget: \"yesno\"\n                    })\n                  ]\n                }}\n                messageParser={MessageParser}\n                actionProvider={ActionProvider}\n                placeholderText={t('enterresponse')}\n              />:\n              <Chatbot\n                config={{\n                  ...chatbotConfig,\n                  initialMessages: [\n                    createChatBotMessage(t('plslogin'))\n                  ]}}\n                  messageParser={MessageParser}\n                  actionProvider={ActionProvider}\n                  placeholderText={t('enterresponse')}\n                />\n            }\n            \n          </Popup>\n        }\n      </div>\n      <div id=\"services\" className='flex flex-wrap'>\n        <div className=\"w-full sm:w-1/2 mt-20 text-center sm:px-6\">\n            <h3 className=\"text-3xl text-gray-900 font-semibold\">{t('services')}</h3>\n            <div className='mt-20 flex flex-wrap'>\n              <div className=\"w-full sm:w-1/2 m-15 mx-auto my-auto\">\n                <Image className='mx-auto my-auto' src=\"https://cms.ohbiohealth.club/uploads/Onour_224eb9361d.png\" width={200} height={200}/>\n              </div>\n              <div className=\"w-full sm:w-1/2 m-15 mx-auto my-auto\">\n                <Image className='mx-auto my-auto' src=\"https://cms.ohbiohealth.club/uploads/woopie_27f9b598d3.png\" width={200} height={200}/>\n              </div>\n            </div> \n        </div>\n        <div className=\"w-full sm:w-1/2 mt-20 text-center sm:px-6\">\n            <h3 className=\"text-3xl text-gray-900 font-semibold\">{t('partners')}</h3>\n            <div className='mt-20 flex flex-wrap'>\n              <div className=\"w-full sm:w-1/2 m-15 mx-auto my-auto\">\n                <Image className='mx-auto my-auto' src=\"https://cms.ohbiohealth.club/uploads/cyberport_d8cac9ac3f.png\" width={200} height={200}/>\n              </div>\n              <div className=\"w-full sm:w-1/2 m-15 mx-auto my-auto\">\n                <Image className='mx-auto my-auto' src=\"https://cms.ohbiohealth.club/uploads/jade_16a737d4f2.png\" width={200} height={200}/>\n              </div>\n            </div>\n        </div>\n      </div>\n      <div id=\"faq\">\n        <Section\n          title={t('faq')}\n          description={faqContent}\n        />\n      </div>\n      <div id=\"contact\">\n        <Section\n          title={t('contact')}\n          description={contactContent}\n        />\n      </div>\n      <div> \n        <Section>\n          <NewsletterSubscribe mailChimpUrl={data.link} />\n        </Section>\n      </div>\n    </div>\n  )\n}\n","/home/gordon/projects/ohbiohealth/site/pages/privacy.js",[],"/home/gordon/projects/ohbiohealth/site/pages/shop.js",[],"/home/gordon/projects/ohbiohealth/site/pages/terms.js",[],"/home/gordon/projects/ohbiohealth/site/components/Background.js",[],"/home/gordon/projects/ohbiohealth/site/components/CenteredFooter.js",[],"/home/gordon/projects/ohbiohealth/site/components/ChatBotBodyDiagram/ChatBotBodyDiagram.js",[],"/home/gordon/projects/ohbiohealth/site/components/ChatBotInfoBox/ChatBotInfoBox.js",[],"/home/gordon/projects/ohbiohealth/site/components/ChatBotOptions/YesNoOptions.js",[],"/home/gordon/projects/ohbiohealth/site/components/Dropdown.js",[],"/home/gordon/projects/ohbiohealth/site/components/DropdownResponsive.js",[],"/home/gordon/projects/ohbiohealth/site/components/Footer.js",[],"/home/gordon/projects/ohbiohealth/site/components/FooterCopyright.js",[],"/home/gordon/projects/ohbiohealth/site/components/FooterIconList.js",[],"/home/gordon/projects/ohbiohealth/site/components/Header.js",["284"],"import { useState, useEffect } from \"react\"\nimport Image from 'next/image'\nimport Link from \"next/link\"\nimport DropDown from \"./Dropdown\"\nimport DropDownResponsive from \"./DropdownResponsive\"\nimport { useTranslation } from 'react-i18next'\nimport { useAppState } from '../hooks/use-appstate'\nimport { useRouter } from 'next/router'\n\nexport default function Header({ currentUser }) {\n  const { t, i18n } = useTranslation()  \n  const [isOpen, setIsOpen] = useState(false)\n  const [dismissBar, setDismissBar] = useState(false)\n  const { hasDismissedNotification, setHasDismissedNotification } = useAppState()\n  const router = useRouter()\n\n  useEffect(() => {\n    let displayMessage = ''\n    if (currentUser && currentUser.usertype === 'client') {\n        if (!currentUser.hasProvidedInfo) {\n            displayMessage = t('basic')\n        } else if (currentUser.hasBoughtDevice && !currentUser.hasRegDevice && !currentUser.hasFinishedSurvey) {\n            displayMessage = t('buydevice')\n        } else if (currentUser.hasBoughtDevice && currentUser.hasRegDevice && !currentUser.hasFinishedSurvey) {\n            displayMessage = t('talkchatbot')\n        }\n    }\n    if (displayMessage === '' || hasDismissedNotification) {\n        setDismissBar(true)\n    } else {\n        setDismissBar(false)\n    }\n  },[currentUser])\n\n  return (\n    <div>\n      { !dismissBar &&\n            <div className=\"mb-0 p-2 text-white bg-gray-800 text-center\">\n                <p>              \n                    <span>\n                    {\n                        currentUser && !currentUser.hasProvidedInfo && <>{t('basic')}</>\n                    }    \n                    {\n                        currentUser && currentUser.hasBoughtDevice && !currentUser.hasRegDevice && !currentUser.hasFinishedSurvey && <>{t('buydevice')}</>\n                    }  \n                    {\n                        currentUser && currentUser.hasBoughtDevice && currentUser.hasRegDevice && !currentUser.hasFinishedSurvey && <>{t('talkchatbot')}</>\n                    }\n                        <button \n                            className=\"ml-10 border-2 border-white p-1\" \n                            onClick={() => {\n                                setHasDismissedNotification(true)\n                                setDismissBar(true)\n                            }} \n                            type=\"button\"\n                        >{t('dismiss')}\n                        </button>\n                    </span>\n                </p>\n            </div>\n      }\n      <header className=\"bg-gradient-to-r from-indigo-500 to-cyan-500 sm:flex sm:justify-between sm:items-center sm:px-4 sm:py-3\">\n        <div className=\"flex items-center justify-between px-4 py-3 sm:p-0\">\n          <div>\n            <button className=\"\" onClick={() => {router.replace('/')}}>\n              <Image className=\"h-8\" src=\"/OHLogo.jpg\" alt=\"hello\" width={100} height={40}/>\n            </button>\n          </div>\n          <div className=\"sm:hidden\">\n            <button onClick={()=> setIsOpen(!isOpen)} type=\"button\" className=\"block text-gray-500 hover:text-white hover:outline-none focus:text-white focus:outline-none\">\n              { isOpen ?\n                <svg className=\"h-6 w-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path fillRule=\"evenodd\" d=\"M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z\"/>\n                </svg> :\n                <svg className=\"h-6 w-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path fillRule=\"evenodd\" d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"/>\n                </svg>\n              }\n            </button>\n          </div>\n        </div>\n        <nav className={`${isOpen ? 'block': 'hidden'} sm:block`}>\n          <div className=\"px-2 pt-2 pb-4 sm:flex sm:p-0\">\n            <Link href='/#about'><a className=\"block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800\">{t('aboutus')}</a></Link>\n            <Link href='/#technology'><a className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\">{t('technology')}</a></Link>\n            <div className=\"hidden sm:block\">\n              <DropDown title={t('products')} items={['BM','QM','BES','SEG',t('pain1')]} short={false} links={['/#productsBM','/#productsQM','/#productsBES','/#productsSEG','/#chatbot']}/>\n            </div>\n            <DropDownResponsive title={t('products')} items={['BM','QM','BES','SEG',t('pain1')]} links={['/#productsBM','/#productsQM','/#productsBES','/#productsSEG','/#chatbot']}/>\n            <Link href='/#services'><a className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\">{t('service')}</a></Link>\n            <Link href='/shop'><a className=\"mt-1 block px-2 py-1 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-2\">{t('shop')}</a></Link>\n            <div className=\"hidden sm:block\">\n              <DropDown title={t('support')} items={[t('faq'),t('contact')]} short={false} links={['/#faq','/#contact']}/>\n            </div>\n            <DropDownResponsive title={t('support')} items={[t('faq'),t('contact')]} links={['/#faq','/#contact']}/>\n            {\n              currentUser && currentUser.usertype === 'admin' && \n              <div className=\"hidden sm:block\">\n                <DropDown title={t('admin')} items={[t('adddevice'),t('approve')]} short={false} links={['/admin/devicereg','/admin/approve']}/>\n              </div>\n            }\n            {\n              currentUser && currentUser.usertype === 'admin' &&\n              <DropDownResponsive title={t('admin')} items={[t('adddevice'),t('approve')]} links={['/admin/devicereg','/admin/approve']}/>\n            }\n            <div className=\"hidden sm:block\">\n              <DropDown title={`${i18n.language === 'en' ? 'EN': '繁'}`} items={['EN','繁']} short={true} links={['#','#']} isLanguageMenu={true}/>\n            </div>\n            <DropDownResponsive title={`${i18n.language === 'en' ? 'EN': '繁'}`} items={['EN','繁']} links={['#','#']} isLanguageMenu={true}/>\n            <div className=\"hidden sm:block\">\n              <DropDown \n                title={t('account')}\n                items={currentUser? [t('regdevice'), t('order'), t('signout')]: [t('signin'), t('register')]} \n                short={false}\n                links={currentUser? ['/account/regdevice','/account/orders','/account/signout']:['/account/signin','/account/signup']}\n              />\n            </div>\n            <DropDownResponsive \n              title={t('account')} \n              items={currentUser? [t('regdevice'), t('order'), t('signout')]:[t('signin'), t('register')]}\n              links={currentUser? ['/account/regdevice','/account/orders','/account/signout']:['/account/signin','/account/signup']}\n            />\n          </div>\n        </nav>\n      </header>\n    </div>\n  )\n}\n","/home/gordon/projects/ohbiohealth/site/components/Hero.js",[],"/home/gordon/projects/ohbiohealth/site/components/NewsletterForm.js",[],"/home/gordon/projects/ohbiohealth/site/components/NewsletterSubscribe.js",[],"/home/gordon/projects/ohbiohealth/site/components/ProductBrowser.js",["285"],"import React from 'react'\nimport { useEffect } from 'react'\nimport useRequest from '../hooks/use-request'\n\nconst ProductBrowser = (props) => {\n    const { doRequest, errors } = useRequest({\n        url: '/api/profiles/orders',\n        method: 'post',\n        onSuccess: (data) => {\n        }\n    });\n\n    useEffect(() => {\n        let ecwidLoaded = false;\n\n        function load_ecwid() {\n        if( typeof Ecwid != 'undefined' ) {\n            Ecwid.OnAPILoaded.add(function() {\n            if (!ecwidLoaded) {\n                ecwidLoaded = true;\n                if (props.currentUser) {\n                    Ecwid.Cart.setCustomerEmail(props.currentUser.email)\n                }\n                xProductBrowser(\"categoriesPerRow=3\", \"views=grid(3,3) list(10) table(20)\", \"categoryView=grid\", \"searchView=list\", \"id=ecStoreProductBrowser\");\n            }\n            });\n            Ecwid.OnOrderPlaced.add(async (order) => {\n                let sentOrder = { orderNumber: order.orderNumber, total: order.total, items: order.items }\n                sentOrder.items = sentOrder.items.map(item => {\n                    return({\n                        product: {\n                            price: item.product.price,\n                            name: item.product.name,\n                            sku: item.product.sku,\n                            url: item.product.url\n                        },\n                        quantity: item.quantity\n                    })\n                })\n\n                if (props.currentUser) {\n                    await doRequest({ \n                        orderNumber: sentOrder.orderNumber,\n                        total: sentOrder.total,\n                        items: sentOrder.items\n                    })\n                }\n            })\n        }}\n\n        window.ec = window.ec || {};\n        window.ec.config = window.ec.config || {};\n        window.ec.config.storefrontUrls = window.ec.config.storefrontUrls || {};\n        window.ec.config.storefrontUrls.cleanUrls = true;\n        window.ec.config.storefrontUrls.queryBasedCleanUrls = true;\n\n        window.ecwid_script_defer = true;\n        window.ecwid_dynamic_widgets = true;\n    \n        if (!document.getElementById('ecwid-script')) {\n            var script = document.createElement('script');\n            script.charset = 'utf-8';\n            script.type = 'text/javascript';\n            script.src = 'https://app.ecwid.com/script.js?' + props.storeId + '&data_platform=nextjs';\n            script.id = 'ecwid-script'\n            script.onload = load_ecwid\n            document.body.appendChild(script);\n        } else {\n        load_ecwid()\n        }\n    },[])\n\n    return (\n        <div id=\"ecStoreProductBrowser\"></div>\n    )\n}\n\nProductBrowser.defaultProps = {storeId: 13433173};\n\nexport default ProductBrowser","/home/gordon/projects/ohbiohealth/site/components/Section.js",[],"/home/gordon/projects/ohbiohealth/site/components/VerticalFeatureRow.js",["286","287"],"import className from 'classnames';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport ReactMarkdown from 'react-markdown';\n\nconst VerticalFeatureRow = (props) => {\n  const verticalFeatureClass = className(\n    'mt-20',\n    'flex',\n    'flex-wrap',\n    'items-center',\n    {\n      'flex-row-reverse': props.reverse,\n    }\n  );\n\n  const router = useRouter();\n\n  return (\n    <div className={verticalFeatureClass}>\n      <div className={`w-full sm:w-1/2 text-center sm:px-6 py-6 rounded-lg shadow-lg bg-gradient-to-r ${props.reverse? ' from-cyan-300 to-indigo-500': ' from-indigo-500 to-cyan-300'}`}>\n        <h2 className=\"text-3xl text-gray-800 font-semibold\">{props.title}</h2>\n        <ReactMarkdown className=\"mt-6 text-base text-gray-800 leading-6 whitespace-pre-wrap list-disc\">\n          {props.description}\n        </ReactMarkdown>\n      </div>\n\n      <div className=\"w-full sm:w-1/2 p-6\">\n        {\n          props.imageOverride ?\n          <img className='mx-auto object-center p-4' src={`${router.basePath}${props.image}`} alt={props.imageAlt} />:\n          <img className='mx-auto object-center p-4' src={`${router.basePath}${props.image}`} alt={props.imageAlt} width={300} height={300}/>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport { VerticalFeatureRow };\n","/home/gordon/projects/ohbiohealth/site/components/Image.js",[],"/home/gordon/projects/ohbiohealth/site/components/Product.js",["288"],"import Link from 'next/link';\nimport AddToCartButton from './cart/AddToCartButton'\nimport ProductPrice from \"./ProductPrice\"\nimport Image from \"./Image\"\nimport {DEFAULT_PRODUCT_HOME_IMG_URL} from \"../utils/constants/urls\"\n\nconst Product = ( props ) => {\n\tconst { product } = props;\n\n\treturn (\n\t\t// @TODO Need to handle Group products differently.\n\t\tundefined !== product && 'GroupProduct' !== product.__typename ? (\n\t\t\t<div className=\"product mb-5\">\n\n\n\t\t\t\t<Link href={ `/product/${ product?.slug }`} >\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tclassName=\"object-cover bg-gray-100\"\n\t\t\t\t\t\t\twidth=\"308\"\n\t\t\t\t\t\t\theight=\"308\"\n\t\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\t\tsourceUrl={ product?.image?.sourceUrl ?? '' }\n\t\t\t\t\t\t\tdefaultImgUrl={DEFAULT_PRODUCT_HOME_IMG_URL}\n\t\t\t\t\t\t\taltText={product?.image?.altText ?? product?.slug}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"product-info\">\n\t\t\t\t\t<h3 className=\"product-title mt-3 font-medium text-gray-800\">\n\t\t\t\t\t\t{ product.name ? product.name : '' }\n\t\t\t\t\t</h3>\n\t\t\t\t\t<div className=\"product-description text-sm text-gray-700\" dangerouslySetInnerHTML={{ __html: (product?.description)}}/>\n\t\t\t\t\t<ProductPrice salesPrice={product?.price} regularPrice={product?.regularPrice}/>\n\t\t\t\t\t<AddToCartButton product={ product }/>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t) : (\n\t\t\t''\n\t\t)\n\t);\n};\n\nexport default Product;\n","/home/gordon/projects/ohbiohealth/site/components/ProductPrice.js",[],"/home/gordon/projects/ohbiohealth/site/components/cart/AddToCartButton.js",["289"],"import {useState, useContext} from \"react\";\nimport {useQuery, useMutation} from '@apollo/client';\nimport Link from \"next/link\";\nimport {v4} from 'uuid';\nimport cx from 'classnames';\n\nimport { CartContext } from \"../../hooks/use-cart\"\nimport {getFormattedCart} from \"../../utils/cart-functions\"\nimport GET_CART from \"../../data/graphql/queries/get-cart\"\nimport ADD_TO_CART from \"../../data/graphql/mutations/add-to-cart\"\n\nconst AddToCart = (props) => {\n\n    const {product} = props;\n\n    const productQryInput = {\n        clientMutationId: v4(), // Generate a unique id.\n        productId: product.productId,\n    };\n\n    const [ cart, setCart ] = useContext(CartContext)\n    const [showViewCart, setShowViewCart] = useState(false);\n    const [requestError, setRequestError] = useState(null);\n\n        // Get Cart Data.\n    const {data, refetch} = useQuery(GET_CART, {\n            notifyOnNetworkStatusChange: true,\n            onCompleted: () => {\n\n                // Update cart in the localStorage.\n                const updatedCart = getFormattedCart(data);\n                console.log(updatedCart)\n                localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart));\n\n                // Update cart data in React Context.\n                setCart(updatedCart);\n            }\n        });\n\n    // Add to Cart Mutation.\n    const [addToCart, {\n        data: addToCartRes,\n        loading: addToCartLoading,\n        error: addToCartError\n    }] = useMutation(ADD_TO_CART, {\n        variables: {\n            input: productQryInput,\n        },\n        onCompleted: () => {\n            // On Success:\n            // 1. Make the GET_CART query to update the cart with new values in React context.\n            refetch();\n\n            // 2. Show View Cart Button\n            setShowViewCart(true)\n        },\n        onError: (error) => {\n            if (error) {\n                setRequestError(error?.graphQLErrors?.[0]?.message ?? '');\n            }\n        }\n    });\n\n    const handleAddToCartClick = async () => {\n        setRequestError(null);\n        await addToCart();\n    };\n\n    return (\n        <div>\n            {/*\tCheck if its an external product then put its external buy link */}\n            {\"ExternalProduct\" === product.__typename ? (\n                    <a href={product?.externalUrl ?? '/'} target=\"_blank\" rel=\"noreferrer\"\n                       className=\"px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">\n\t\t\t\t\t\tBuy now\n                    </a>\n                ) :\n                <button\n\t\t\t\t\tdisabled={addToCartLoading}\n                    onClick={handleAddToCartClick}\n                    className={cx(\n                        'px-3 py-1 rounded-sm mr-3 text-sm border-solid border border-current',\n                        {'hover:bg-purple-600 hover:text-white hover:border-purple-600': !addToCartLoading},\n                        {'opacity-50 cursor-not-allowed': addToCartLoading}\n                    )}\n                >\n\t\t\t\t\t{ addToCartLoading ? 'Adding to cart...' : 'Add to cart' }\n                </button>\n            }\n            {showViewCart ? (\n                <Link href=\"/cart\">\n                    <button\n                        className=\"px-3 py-1 rounded-sm text-sm border-solid border border-current inline-block hover:bg-purple-600 hover:text-white hover:border-purple-600\">View\n                        Cart\n                    </button>\n                </Link>\n            ) : ''}\n        </div>\n    );\n};\n\nexport default AddToCart;\n","/home/gordon/projects/ohbiohealth/site/pages/api/create-order.js",[],"/home/gordon/projects/ohbiohealth/site/pages/api/get-stripe-session.js",[],"/home/gordon/projects/ohbiohealth/site/pages/api/stripe/[...nextstripe].js",[],"/home/gordon/projects/ohbiohealth/site/pages/api/stripe-web-hook.js",[],"/home/gordon/projects/ohbiohealth/site/pages/cart.js",[],"/home/gordon/projects/ohbiohealth/site/pages/checkout.js",[],"/home/gordon/projects/ohbiohealth/site/pages/thank-you.js",["290"],"import {useState, useEffect, useContext} from \"react\";\r\nimport Router from \"next/router\";\r\nimport Link from 'next/link';\r\nimport axios from \"axios\";\r\nimport {CartContext} from '../hooks/use-cart'\r\nimport Loading from '../components/icons/Loading'\r\nimport ShoppingCart from '../components/icons/ShoppingCart'\r\n\r\nconst ThankYouContent = () => {\r\n    const [cart, setCart] = useContext(CartContext);\r\n    const [isSessionFetching, setSessionFetching] = useState(false);\r\n    const [sessionData, setSessionData] = useState({});\r\n    const session_id = process.browser ? Router.query.session_id : null;\r\n\r\n    useEffect(() => {\r\n        setSessionFetching(true);\r\n        if (process.browser) {\r\n            localStorage.removeItem('woo-next-cart');\r\n            setCart(null);\r\n\r\n            if (session_id) {\r\n                axios.get(`/api/get-stripe-session/?session_id=${session_id}`)\r\n                    .then((response) => {\r\n                        setSessionData(response?.data ?? {});\r\n                        setSessionFetching(false);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                        setSessionFetching(false);\r\n                    });\r\n            }\r\n        }\r\n\r\n    }, [session_id]);\r\n\r\n    return (\r\n        <div className=\"w-full md:w-96 md:max-w-full mt-20 mx-auto\">\r\n                {isSessionFetching ? <Loading/> : (\r\n                    <>\r\n                        <h2 className=\"mb-6 text-xl\"><ShoppingCart className=\"inline-block mr-1\"/> <span>Thank you for placing the order.</span></h2>\r\n                        <p>Your payment is successful and your order details are: </p>\r\n                        <table className=\"table-auto w-full text-left whitespace-no-wrap mb-8\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th className=\"px-4 py-3 title-font tracking-wider font-medium text-gray-900 text-sm bg-gray-100 rounded-tl rounded-bl\">Name</th>\r\n                                <th className=\"px-4 py-3 title-font tracking-wider font-medium text-gray-900 text-sm bg-gray-100\">Details</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td className=\"px-4 py-3\">Order#</td>\r\n                                <td className=\"px-4 py-3\">{sessionData?.metadata?.orderId}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"px-4 py-3\">Email</td>\r\n                                <td className=\"px-4 py-3\">{sessionData?.customer_email}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <Link href=\"/\">\r\n                            <a className=\"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto\">Shop more</a>\r\n                        </Link>\r\n                    </>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ThankYouPage = () => {\r\n    return (\r\n        <>\r\n            <ThankYouContent/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThankYouPage;\r\n","/home/gordon/projects/ohbiohealth/site/components/cart/CartItem.js",["291"],"import { useState } from 'react';\r\nimport { v4 } from \"uuid\";\r\nimport { getUpdatedItems } from '../../utils/cart-functions'\r\nimport {Cross, Loading} from '../icons'\r\n\r\nconst CartItem = ( {\r\n\t                   item,\r\n\t                   products,\r\n\t\t\t\t\t   updateCartProcessing,\r\n\t                   handleRemoveProductClick,\r\n\t                   updateCart,\r\n                   } ) => {\r\n\r\n\tconst [productCount, setProductCount] = useState( item.qty );\r\n\r\n\t/*\r\n\t * When user changes the qty from product input update the cart in localStorage\r\n\t * Also update the cart in global context\r\n\t *\r\n\t * @param {Object} event event\r\n\t *\r\n\t * @return {void}\r\n\t */\r\n\tconst handleQtyChange = ( event, cartKey ) => {\r\n\r\n\t\tif ( process.browser ) {\r\n\r\n\t\t\tevent.stopPropagation();\r\n\r\n\t\t\t// If the previous update cart mutation request is still processing, then return.\r\n\t\t\tif ( updateCartProcessing ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If the user tries to delete the count of product, set that to 1 by default ( This will not allow him to reduce it less than zero )\r\n\t\t\tconst newQty = ( event.target.value ) ? parseInt( event.target.value ) : 1;\r\n\r\n\t\t\t// Set the new qty in state.\r\n\t\t\tsetProductCount( newQty );\r\n\r\n\t\t\tif ( products.length ) {\r\n\r\n\t\t\t\tconst updatedItems = getUpdatedItems( products, newQty, cartKey );\r\n\r\n\t\t\t\tupdateCart( {\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tinput: {\r\n\t\t\t\t\t\t\tclientMutationId: v4(),\r\n\t\t\t\t\t\t\titems: updatedItems\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<tr className=\"woo-next-cart-item\" key={ item.productId }>\r\n\t\t\t<th className=\"woo-next-cart-element woo-next-cart-el-close\">\r\n\t\t\t\t{/* Remove item */}\r\n\t\t\t\t<span className=\"woo-next-cart-close-icon cursor-pointer\"\r\n\t\t\t\t      onClick={ ( event ) => handleRemoveProductClick( event, item.cartKey, products ) }>\r\n\t\t\t\t\t<Cross/>\r\n\t\t\t\t</span>\r\n\t\t\t</th>\r\n\t\t\t<td className=\"woo-next-cart-element\">\r\n\t\t\t\t<img width=\"64\" src={ item.image.sourceUrl } srcSet={ item.image.srcSet } alt={ item.image.title }/>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"woo-next-cart-element\">{ item.name }</td>\r\n\t\t\t<td className=\"woo-next-cart-element\">{ ( 'string' !== typeof item.price ) ? item.price.toFixed( 2 ) : item.price }</td>\r\n\r\n\t\t\t{/* Qty Input */ }\r\n\t\t\t<td className=\"woo-next-cart-element woo-next-cart-qty\">\r\n\t\t\t\t{/* @TODO Need to update this with graphQL query */ }\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\tdata-cart-key={ item.cartKey }\r\n\t\t\t\t\tclassName={ `woo-next-cart-qty-input form-control ${ updateCartProcessing ? 'opacity-25 cursor-not-allowed' : '' } ` }\r\n\t\t\t\t\tvalue={ productCount }\r\n\t\t\t\t\tonChange={ ( event ) => handleQtyChange( event, item.cartKey ) }\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"woo-next-cart-element\">\r\n\t\t\t\t{ ( 'string' !== typeof item.totalPrice ) ? item.totalPrice.toFixed( 2 ) : item.totalPrice }\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t)\r\n};\r\n\r\nexport default CartItem;\r\n","/home/gordon/projects/ohbiohealth/site/components/cart/CartItemsContainer.js",["292","293","294"],"import Link from 'next/link';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { CartContext } from '../../hooks/use-cart'\r\nimport { getFormattedCart, getUpdatedItems } from '../../utils/cart-functions'\r\nimport CartItem from \"./CartItem\";\r\nimport { v4 } from 'uuid';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport UPDATE_CART from '../../data/graphql/mutations/update-cart'\r\nimport GET_CART from '../../data/graphql/queries/get-cart'\r\nimport CLEAR_CART_MUTATION from '../../data/graphql/mutations/clear-cart'\r\nimport {isEmpty} from 'lodash'\r\n\r\n\r\nconst CartItemsContainer = () => {\r\n\r\n\r\n\t// @TODO wil use it in future variations of the project.\r\n\tconst [ cart, setCart ] = useContext(CartContext)\r\n\tconst [requestError, setRequestError] = useState( null );\r\n\tconst [refreshCart, setRefreshCart] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\t// Update cart in the localStorage.\r\n\t\tconst updatedCart = getFormattedCart( data );\r\n\t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\r\n\t\t// Update cart data in React Context.\r\n\t\tsetCart( updatedCart );\r\n\r\n\t},[refreshCart])\r\n\r\n\t// Get Cart Data.\r\n\tconst { loading, error, data, refetch } = useQuery( GET_CART, {\r\n\t\tnotifyOnNetworkStatusChange: true,\r\n\t\tonCompleted: () => {\r\n\t\t\tsetRefreshCart(!refreshCart)\r\n\t\t}\r\n\t} );\r\n\r\n\t// Update Cart Mutation.\r\n\tconst [updateCart, { data: updateCartResponse, loading: updateCartProcessing, error: updateCartError }] = useMutation( UPDATE_CART, {\r\n\t\tonCompleted: () => {\r\n\t\t\trefetch();\r\n\t\t\tsetRefreshCart(!refreshCart)\r\n\t\t},\r\n\t\tonError: ( error ) => {\r\n\t\t\tif ( error ) {\r\n\t\t\t\tconst errorMessage = error?.graphQLErrors?.[ 0 ]?.message ? error.graphQLErrors[ 0 ].message : '';\r\n\t\t\t\tsetRequestError( errorMessage );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\t// Update Cart Mutation.\r\n\tconst [clearCart, { data: clearCartRes, loading: clearCartProcessing, error: clearCartError }] = useMutation( CLEAR_CART_MUTATION, {\r\n\t\tonCompleted: () => {\r\n\t\t\trefetch();\r\n\t\t\tsetRefreshCart(!refreshCart)\r\n\t\t},\r\n\t\tonError: ( error ) => {\r\n\t\t\tif ( error ) {\r\n\t\t\t\tconst errorMessage = ! isEmpty(error?.graphQLErrors?.[ 0 ]) ? error.graphQLErrors[ 0 ]?.message : '';\r\n\t\t\t\tsetRequestError( errorMessage );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\t/*\r\n\t * Handle remove product click.\r\n\t *\r\n\t * @param {Object} event event\r\n\t * @param {Integer} Product Id.\r\n\t *\r\n\t * @return {void}\r\n\t */\r\n\tconst handleRemoveProductClick = ( event, cartKey, products ) => {\r\n\r\n\t\tevent.stopPropagation();\r\n\t\tif ( products.length ) {\r\n\r\n\t\t\t// By passing the newQty to 0 in updateCart Mutation, it will remove the item.\r\n\t\t\tconst newQty = 0;\r\n\t\t\tconst updatedItems = getUpdatedItems( products, newQty, cartKey );\r\n\r\n\t\t\tupdateCart( {\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tinput: {\r\n\t\t\t\t\t\tclientMutationId: v4(),\r\n\t\t\t\t\t\titems: updatedItems\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t} );\r\n\t\t}\r\n\t};\r\n\r\n\t// Clear the entire cart.\r\n\tconst handleClearCart = ( event ) => {\r\n\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tif ( clearCartProcessing ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearCart( {\r\n\t\t\tvariables: {\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tclientMutationId: v4(),\r\n\t\t\t\t\tall: true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t} );\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"cart product-cart-container container mx-auto my-32 px-4 xl:px-0\">\r\n\t\t\t{ cart ? (\r\n\t\t\t\t<div className=\"woo-next-cart-wrapper container\">\r\n\t\t\t\t\t<div className=\"cart-header grid grid-cols-2 gap-4\">\r\n\t\t\t\t\t\t<h1 className=\"text-2xl mb-5 uppercase\">Cart</h1>\r\n\t\t\t\t\t\t{/*Clear entire cart*/}\r\n\t\t\t\t\t\t<div className=\"clear-cart text-right\">\r\n\t\t\t\t\t\t\t<button className=\"px-4 py-1 bg-gray-500 text-white rounded-sm w-auto\" onClick={ ( event ) => handleClearCart( event ) } disabled={ clearCartProcessing }>\r\n\t\t\t\t\t\t\t\t<span className=\"woo-next-cart\">Clear Cart</span>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-arrow-alt-right\"/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{ clearCartProcessing ? <p>Clearing...</p> : '' }\r\n\t\t\t\t\t\t\t{ updateCartProcessing ? <p>Updating...</p> : null }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"grid grid-cols-1 xl:grid-cols-4 gap-0 xl:gap-4 mb-5\">\r\n\t\t\t\t\t\t<table className=\"cart-products table-auto col-span-3 mb-5\">\r\n\t\t\t\t\t\t\t\t<thead className=\"text-left\">\r\n\t\t\t\t\t\t\t\t<tr className=\"woo-next-cart-head-container\">\r\n\t\t\t\t\t\t\t\t\t<th className=\"woo-next-cart-heading-el\" scope=\"col\"/>\r\n\t\t\t\t\t\t\t\t\t<th className=\"woo-next-cart-heading-el\" scope=\"col\"/>\r\n\t\t\t\t\t\t\t\t\t<th className=\"woo-next-cart-heading-el\" scope=\"col\">Product</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"woo-next-cart-heading-el\" scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"woo-next-cart-heading-el\" scope=\"col\">Quantity</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"woo-next-cart-heading-el\" scope=\"col\">Total</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{ cart.products.length && (\r\n\t\t\t\t\t\t\t\t\tcart.products.map( item => (\r\n\t\t\t\t\t\t\t\t\t\t<CartItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={ item.productId }\r\n\t\t\t\t\t\t\t\t\t\t\titem={ item }\r\n\t\t\t\t\t\t\t\t\t\t\tupdateCartProcessing={ updateCartProcessing }\r\n\t\t\t\t\t\t\t\t\t\t\tproducts={ cart.products }\r\n\t\t\t\t\t\t\t\t\t\t\thandleRemoveProductClick={ handleRemoveProductClick }\r\n\t\t\t\t\t\t\t\t\t\t\tupdateCart={ updateCart }\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\r\n\t\t\t\t\t\t{/*Cart Total*/ }\r\n\t\t\t\t\t\t<div className=\"row woo-next-cart-total-container border p-5 bg-gray-200\">\r\n\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t{/* <h2 className=\"text-2xl\">Cart Total</h2> */}\r\n\t\t\t\t\t\t\t\t<table className=\"table table-hover mb-5\">\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr className=\"table-light flex flex-col\">\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"woo-next-cart-element-total text-2xl font-normal\">Subtotal</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"woo-next-cart-element-amt text-2xl font-bold\">{ ( 'string' !== typeof cart.totalProductsPrice ) ? cart.totalProductsPrice.toFixed(2) : cart.totalProductsPrice }</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t{/* <tr className=\"table-light\">\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"woo-next-cart-element-total\">Total</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"woo-next-cart-element-amt\">{ ( 'string' !== typeof cart.totalProductsPrice ) ? cart.totalProductsPrice.toFixed(2) : cart.totalProductsPrice }</td>\r\n\t\t\t\t\t\t\t\t\t</tr> */}\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t<Link href=\"/checkout\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"woo-next-cart-checkout-txt\">Proceed to Checkout</span>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-long-arrow-alt-right\"/>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Display Errors if any */}\r\n\t\t\t\t\t{ requestError ? <div className=\"row woo-next-cart-total-container mt-5\"> { requestError } </div> : '' }\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"container mx-auto my-32 px-4 xl:px-0\">\r\n\t\t\t\t\t<h2 className=\"text-2xl mb-5\">No items in the cart</h2>\r\n\t\t\t\t\t<Link href=\"/\">\r\n\t\t\t\t\t\t<button className=\"bg-purple-600 text-white px-5 py-3 rounded-sm\">\r\n\t\t\t\t\t\t\t<span className=\"woo-next-cart-checkout-txt\">Add New Products</span>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-long-arrow-alt-right\"/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t) }\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default CartItemsContainer;\r\n","/home/gordon/projects/ohbiohealth/site/components/checkout/Address.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/CheckoutCartItem.js",["295"],"const CheckoutCartItem = ( { item } ) => {\r\n\r\n\treturn (\r\n\t\t<tr className=\"woo-next-cart-item\" key={ item.productId }>\r\n\t\t\t<td className=\"woo-next-cart-element\">\r\n\t\t\t\t<img width=\"64\" src={ item.image.sourceUrl } srcSet={ item.image.srcSet } alt={item.image.title}/>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"woo-next-cart-element\">{ item.name }</td>\r\n\t\t\t<td className=\"woo-next-cart-element\">{ item.totalPrice }</td>\r\n\t\t</tr>\r\n\t)\r\n};\r\n\r\nexport default CheckoutCartItem;\r\n","/home/gordon/projects/ohbiohealth/site/components/checkout/CheckoutForm.js",["296","297"],"import {useState, useContext, useEffect} from 'react';\r\nimport {useMutation, useQuery} from '@apollo/client';\r\nimport cx from 'classnames'\r\n\r\nimport YourOrder from \"./YourOrder\";\r\nimport PaymentModes from \"./PaymentModes\";\r\nimport {CartContext} from '../../hooks/use-cart';\r\nimport validateAndSanitizeCheckoutForm from '../../utils/validator/checkout'\r\nimport {getFormattedCart, createCheckoutData,} from '../../utils/cart-functions'\r\nimport OrderSuccess from \"./OrderSuccess\";\r\nimport GET_CART from '../../data/graphql/queries/get-cart'\r\nimport CHECKOUT_MUTATION from '../../data/graphql/mutations/checkout'\r\nimport Address from \"./Address\";\r\nimport {\r\n    handleBillingDifferentThanShipping,\r\n    handleCreateAccount, handleStripeCheckout,\r\n    setStatesForCountry\r\n} from '../../utils/shop/checkout'\r\nimport CheckboxField from \"./form-elements/CheckboxField\";\r\nimport CLEAR_CART_MUTATION from '../../data/graphql/mutations/clear-cart'\r\n\r\nconst defaultCustomerInfo = {\r\n    firstName: '',\r\n    lastName: '',\r\n    address1: '',\r\n    address2: '',\r\n    city: '',\r\n    country: '',\r\n    state: '',\r\n    postcode: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    errors: null\r\n}\r\n\r\nconst CheckoutForm = ({countriesData}) => {\r\n\r\n    const {billingCountries, shippingCountries} = countriesData || {}\r\n\r\n    const initialState = {\r\n        billing: {\r\n            ...defaultCustomerInfo,\r\n        },\r\n        shipping: {\r\n            ...defaultCustomerInfo\r\n        },\r\n        createAccount: false,\r\n        orderNotes: '',\r\n        billingDifferentThanShipping: false,\r\n        paymentMethod: 'cod',\r\n    };\r\n\r\n    const [cart, setCart] = useContext(CartContext);\r\n    const [input, setInput] = useState(initialState);\r\n    const [orderData, setOrderData] = useState(null);\r\n    const [requestError, setRequestError] = useState(null);\r\n    const [theShippingStates, setTheShippingStates] = useState([]);\r\n    const [isFetchingShippingStates, setIsFetchingShippingStates] = useState(false);\r\n    const [theBillingStates, setTheBillingStates] = useState([]);\r\n    const [isFetchingBillingStates, setIsFetchingBillingStates] = useState(false);\r\n    const [isStripeOrderProcessing, setIsStripeOrderProcessing] = useState(false);\r\n    const [createdOrderData, setCreatedOrderData] = useState({});\r\n    const [refreshCart, setRefreshCart] = useState(false)\r\n\r\n    // Get Cart Data.\r\n    const {data} = useQuery(GET_CART, {\r\n        notifyOnNetworkStatusChange: true,\r\n        onCompleted: () => {\r\n            // Update cart in the localStorage.\r\n            //const updatedCart = getFormattedCart(data);\r\n            //localStorage.setItem('woo-next-cart', JSON.stringify(updatedCart));\r\n\r\n            // Update cart data in React Context.\r\n            //setCart(updatedCart);\r\n            setRefreshCart(!refreshCart)\r\n        }\r\n    });\r\n\r\n    // Create New order: Checkout Mutation.\r\n    const [checkout, {\r\n        data: checkoutResponse,\r\n        loading: checkoutLoading,\r\n    }] = useMutation(CHECKOUT_MUTATION, {\r\n        variables: {\r\n            input: orderData\r\n        },\r\n        onError: (error) => {\r\n            if (error) {\r\n                setRequestError(error?.graphQLErrors?.[0]?.message ?? '');\r\n            }\r\n        }\r\n    });\r\n\r\n    const [ clearCartMutation ] = useMutation( CLEAR_CART_MUTATION );\r\n\r\n    /*\r\n     * Handle form submit.\r\n     *\r\n     * @param {Object} event Event Object.\r\n     *\r\n     * @return {void}\r\n     */\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        /**\r\n         * Validate Billing and Shipping Details\r\n         *\r\n         * Note:\r\n         * 1. If billing is different than shipping address, only then validate billing.\r\n         * 2. We are passing theBillingStates?.length and theShippingStates?.length, so that\r\n         * the respective states should only be mandatory, if a country has states.\r\n         */\r\n        const billingValidationResult = input?.billingDifferentThanShipping ? validateAndSanitizeCheckoutForm(input?.billing, theBillingStates?.length) : {errors: null, isValid: true};\r\n        const shippingValidationResult = validateAndSanitizeCheckoutForm(input?.shipping, theShippingStates?.length);\r\n\r\n        if (!shippingValidationResult.isValid || !billingValidationResult.isValid) {\r\n            setInput({\r\n                ...input,\r\n                billing: {...input.billing, errors: billingValidationResult.errors},\r\n                shipping: {...input.shipping, errors: shippingValidationResult.errors}\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if ( 'stripe-mode' === input.paymentMethod ) {\r\n            console.log('My cart:', cart?.products)\r\n            const createdOrderData = await handleStripeCheckout(input, cart?.products, setRequestError, clearCartMutation, setIsStripeOrderProcessing, setCreatedOrderData);\r\n        \treturn null;\r\n        }\r\n\r\n        const checkOutData = createCheckoutData(input);\r\n        setRequestError(null);\r\n        /**\r\n         *  When order data is set, checkout mutation will automatically be called,\r\n         *  because 'orderData' is added in useEffect as a dependency.\r\n         */\r\n        setOrderData(checkOutData);\r\n    };\r\n\r\n    /*\r\n     * Handle onchange input.\r\n     *\r\n     * @param {Object} event Event Object.\r\n     * @param {bool} isShipping If this is false it means it is billing.\r\n     * @param {bool} isBillingOrShipping If this is false means its standard input and not billing or shipping.\r\n     *\r\n     * @return {void}\r\n     */\r\n    const handleOnChange = async (event, isShipping = false, isBillingOrShipping = false) => {\r\n\r\n        const {target} = event || {};\r\n\r\n        if ('createAccount' === target.name) {\r\n            handleCreateAccount(input, setInput, target)\r\n        } else if ('billingDifferentThanShipping' === target.name) {\r\n            handleBillingDifferentThanShipping(input, setInput, target);\r\n        } else if (isBillingOrShipping) {\r\n            if (isShipping) {\r\n                await handleShippingChange(target)\r\n            } else {\r\n                await handleBillingChange(target)\r\n            }\r\n        } else {\r\n            const newState = {...input, [target.name]: target.value};\r\n            setInput(newState);\r\n        }\r\n    };\r\n\r\n    const handleShippingChange = async (target) => {\r\n        const newState = {...input, shipping: {...input?.shipping, [target.name]: target.value}};\r\n        setInput(newState);\r\n        await setStatesForCountry(target, setTheShippingStates, setIsFetchingShippingStates);\r\n    }\r\n\r\n    const handleBillingChange = async (target) => {\r\n        const newState = {...input, billing: {...input?.billing, [target.name]: target.value}};\r\n        setInput(newState);\r\n        await setStatesForCountry(target, setTheBillingStates, setIsFetchingBillingStates);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        // Update cart in the localStorage.\r\n\t\tconst updatedCart = getFormattedCart( data );\r\n\t\tlocalStorage.setItem( 'woo-next-cart', JSON.stringify( updatedCart ) );\r\n\t\t// Update cart data in React Context.\r\n\t\tsetCart( updatedCart );\r\n\r\n        if (null !== orderData) {\r\n            // Call the checkout mutation when the value for orderData changes/updates.\r\n            await checkout();\r\n        }\r\n\r\n    }, [orderData, refreshCart]);\r\n\r\n    // Loading state\r\n    const isOrderProcessing = checkoutLoading || isStripeOrderProcessing;\r\n\r\n    return (\r\n        <>\r\n            {cart ? (\r\n                <form onSubmit={handleFormSubmit} className=\"woo-next-checkout-form\">\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-20\">\r\n                        <div>\r\n                            {/*Shipping Details*/}\r\n                            <div className=\"billing-details\">\r\n                                <h2 className=\"text-xl font-medium mb-4\">Shipping Details</h2>\r\n                                <Address\r\n                                    states={theShippingStates}\r\n                                    countries={shippingCountries}\r\n                                    input={input?.shipping}\r\n                                    handleOnChange={(event) => handleOnChange(event, true, true)}\r\n                                    isFetchingStates={isFetchingShippingStates}\r\n                                    isShipping\r\n                                    isBillingOrShipping\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <CheckboxField\r\n                                    name=\"billingDifferentThanShipping\"\r\n                                    type=\"checkbox\"\r\n                                    checked={input?.billingDifferentThanShipping}\r\n                                    handleOnChange={handleOnChange}\r\n                                    label=\"Billing different than shipping\"\r\n                                    containerClassNames=\"mb-4 pt-4\"\r\n                                />\r\n                            </div>\r\n                            {/*Billing Details*/}\r\n                            {input?.billingDifferentThanShipping ? (\r\n                                <div className=\"billing-details\">\r\n                                    <h2 className=\"text-xl font-medium mb-4\">Billing Details</h2>\r\n                                    <Address\r\n                                        states={theBillingStates}\r\n                                        countries={billingCountries}\r\n                                        input={input?.billing}\r\n                                        handleOnChange={(event) => handleOnChange(event, false, true)}\r\n                                        isFetchingStates={isFetchingBillingStates}\r\n                                        isShipping={false}\r\n                                        isBillingOrShipping\r\n                                    />\r\n                                </div>\r\n                            ) : null}\r\n\r\n                        </div>\r\n                        {/* Order & Payments*/}\r\n                        <div className=\"your-orders\">\r\n                            {/*\tOrder*/}\r\n                            <h2 className=\"text-xl font-medium mb-4\">Your Order</h2>\r\n                            <YourOrder cart={cart}/>\r\n\r\n                            {/*Payment*/}\r\n                            <PaymentModes input={input} handleOnChange={handleOnChange}/>\r\n\r\n                            <div className=\"woo-next-place-order-btn-wrap mt-5\">\r\n                                <button\r\n                                    disabled={isOrderProcessing}\r\n                                    className={cx(\r\n                                        'bg-purple-600 text-white px-5 py-3 rounded-sm w-auto xl:w-full',\r\n                                        {'opacity-50': isOrderProcessing}\r\n                                    )}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Place Order\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Checkout Loading*/}\r\n                            {isOrderProcessing && <p>Processing Order...</p>}\r\n                            {requestError && <p>Error : {requestError} :( Please try again</p>}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            ) : null}\r\n            {/*\tShow message if Order Success*/}\r\n            <OrderSuccess response={checkoutResponse}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","/home/gordon/projects/ohbiohealth/site/components/checkout/CountrySelection.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/Error.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/OrderSuccess.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/PaymentModes.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/StatesSelection.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/YourOrder.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/form-elements/Abbr.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/form-elements/CheckboxField.js",[],"/home/gordon/projects/ohbiohealth/site/components/checkout/form-elements/InputField.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/ArrowDown.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/Cross.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/Facebook.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/Instagram.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/Loading.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/ShoppingCart.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/Twitter.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/Youtube.js",[],"/home/gordon/projects/ohbiohealth/site/components/icons/index.js",[],{"ruleId":"298","severity":1,"message":"299","line":12,"column":21,"nodeType":"300","endLine":12,"endColumn":134},{"ruleId":"298","severity":1,"message":"299","line":13,"column":21,"nodeType":"300","endLine":13,"endColumn":121},{"ruleId":"301","severity":1,"message":"302","line":16,"column":21,"nodeType":"300","endLine":16,"endColumn":36},{"ruleId":"303","severity":1,"message":"304","line":15,"column":6,"nodeType":"305","endLine":15,"endColumn":8,"suggestions":"306"},{"ruleId":"303","severity":1,"message":"307","line":116,"column":5,"nodeType":"305","endLine":116,"endColumn":33,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":251,"column":17,"nodeType":"300","endLine":251,"endColumn":142},{"ruleId":"309","severity":1,"message":"310","line":254,"column":17,"nodeType":"300","endLine":254,"endColumn":143},{"ruleId":"309","severity":1,"message":"310","line":262,"column":17,"nodeType":"300","endLine":262,"endColumn":146},{"ruleId":"309","severity":1,"message":"310","line":265,"column":17,"nodeType":"300","endLine":265,"endColumn":141},{"ruleId":"303","severity":1,"message":"311","line":33,"column":5,"nodeType":"305","endLine":33,"endColumn":18,"suggestions":"312"},{"ruleId":"303","severity":1,"message":"313","line":71,"column":7,"nodeType":"305","endLine":71,"endColumn":9,"suggestions":"314"},{"ruleId":"298","severity":1,"message":"299","line":31,"column":11,"nodeType":"300","endLine":31,"endColumn":118},{"ruleId":"298","severity":1,"message":"299","line":32,"column":11,"nodeType":"300","endLine":32,"endColumn":142},{"ruleId":"309","severity":1,"message":"310","line":18,"column":7,"nodeType":"300","endLine":26,"endColumn":9},{"ruleId":"301","severity":1,"message":"302","line":91,"column":17,"nodeType":"300","endLine":91,"endColumn":36},{"ruleId":"303","severity":1,"message":"315","line":34,"column":8,"nodeType":"305","endLine":34,"endColumn":20,"suggestions":"316"},{"ruleId":"298","severity":1,"message":"299","line":69,"column":5,"nodeType":"300","endLine":69,"endColumn":105},{"ruleId":"303","severity":1,"message":"317","line":29,"column":4,"nodeType":"305","endLine":29,"endColumn":17,"suggestions":"318"},{"ruleId":"301","severity":1,"message":"302","line":174,"column":9,"nodeType":"300","endLine":174,"endColumn":32},{"ruleId":"301","severity":1,"message":"302","line":190,"column":6,"nodeType":"300","endLine":190,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":6,"column":5,"nodeType":"300","endLine":6,"endColumn":103},{"ruleId":"303","severity":1,"message":"319","line":184,"column":15,"nodeType":"320","endLine":196,"endColumn":6},{"ruleId":"303","severity":1,"message":"321","line":196,"column":8,"nodeType":"305","endLine":196,"endColumn":32,"suggestions":"322"},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","JSXOpeningElement","@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'doRequest'. Either include it or remove the dependency array.","ArrayExpression",["323"],"React Hook useEffect has missing dependencies: 'data.BES', 'data.BM', 'data.QM', 'data.SEG', 'data.about', 'data.contact', 'data.technology', and 't'. Either include them or remove the dependency array. If 'setAboutContent' needs the current value of 'data.about', you can also switch to useReducer instead of useState and read 'data.about' in the reducer.",["324"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'hasDismissedNotification' and 't'. Either include them or remove the dependency array.",["325"],"React Hook useEffect has missing dependencies: 'doRequest', 'props.currentUser', and 'props.storeId'. Either include them or remove the dependency array.",["326"],"React Hook useEffect has a missing dependency: 'setCart'. Either include it or remove the dependency array.",["327"],"React Hook useEffect has missing dependencies: 'data' and 'setCart'. Either include them or remove the dependency array.",["328"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'checkout', 'data', and 'setCart'. Either include them or remove the dependency array.",["329"],{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [doRequest]",{"range":"344","text":"345"},"Update the dependencies array to be: [i18n.language, currentUser, data.about, data.technology, data.BM, data.QM, data.BES, data.SEG, data.contact, t]",{"range":"346","text":"347"},"Update the dependencies array to be: [currentUser, hasDismissedNotification, t]",{"range":"348","text":"349"},"Update the dependencies array to be: [doRequest, props.currentUser, props.storeId]",{"range":"350","text":"351"},"Update the dependencies array to be: [session_id, setCart]",{"range":"352","text":"353"},"Update the dependencies array to be: [data, refreshCart, setCart]",{"range":"354","text":"355"},"Update the dependencies array to be: [checkout, data, orderData, refreshCart, setCart]",{"range":"356","text":"357"},[344,346],"[doRequest]",[4403,4431],"[i18n.language, currentUser, data.about, data.technology, data.BM, data.QM, data.BES, data.SEG, data.contact, t]",[1299,1312],"[currentUser, hasDismissedNotification, t]",[2659,2661],"[doRequest, props.currentUser, props.storeId]",[1267,1279],"[session_id, setCart]",[1106,1119],"[data, refreshCart, setCart]",[7302,7326],"[checkout, data, orderData, refreshCart, setCart]"]